@inject SignInManager<AccountDetails> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
@*<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
</ul>
*@

<div class="card">
    <div class="card-header">
        <h5 class="card-title mb-0">Profile Settings</h5>
    </div>

    <div class="list-group list-group-flush" role="tablist">
        <a class="list-group-item list-group-item-action @(ViewData["ActivePage"].Equals(ManageNavPages.Index) ? "active" : "")" id="profile" asp-page="./Index">
            Profile
        </a>
        <a class="list-group-item list-group-item-action @(ViewData["ActivePage"].Equals(ManageNavPages.Email) ? "active" : "")" id="email" asp-page="./Email">
            Email
        </a>
        <a class="list-group-item list-group-item-action @(ViewData["ActivePage"].Equals(ManageNavPages.ChangePassword) ? "active" : "")" id="change-password" asp-page="./ChangePassword">
            Password
        </a>
    </div>
</div>
